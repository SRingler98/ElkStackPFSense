filter {
  if "PFSense" in [tags] {
    grok {
      add_tag => [ "firewall" ]
      match => [ "message", "<(?<evtid>.*)>(?<datetime>(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)\s+(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9]) (?:2[0123]|[01]?[0-9]):(?:[0-5][0-9]):(?:[0-5][0-9])) (?<prog>.*?): (?<msg>.*)" ]
    }
    mutate {
      gsub => ["datetime","  "," "]
    }
    date {
      match => [ "datetime", "MMM dd HH:mm:ss" ]
      timezone => "America/Denver"
    }
    mutate {
      replace => [ "message", "%{msg}" ]
    }
    mutate {
      remove_field => [ "msg", "datetime" ]
      add_tag => [ "PfSenseTagSucc" ]
    }
    if [prog] == "filterlog[24936]" {
      mutate {
        remove_field => [ "msg", "datetime" ]
	add_tag => [ "FilterCondSucc" ]
      }
      grok {
        patterns_dir => "/etc/logstash/patterns"
        match => [ "message", "%{PFSENSE_LOG_DATA}%{PFSENSE_IP_SPECIFIC_DATA}%{PFSENSE_IP_DATA}%{PFSENSE_PROTOCOL_DATA}",
           "message", "%{PFSENSE_LOG_DATA}%{PFSENSE_IPv4_SPECIFIC_DATA}%{PFSENSE_IP_DATA}%{PFSENSE_PROTOCOL_DATA}" ]
        add_tag => [ "Grok_sucess" ]
      }
      mutate {
        lowercase => [ 'proto' ]
      }
      mutate {
	split => {"message" => "," }
	add_tag => [ "SplitMessage" ]
      }
      geoip {
        add_tag => [ "GeoIP" ]
        source => "src_ip"
	database => "/etc/logstash/conf.d/GeoLite2-City.mmdb"
     }
    }
  }
}
